/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
	actrec/nanopore_fusion Nextflow config file
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
	Default config options for all compute environments
----------------------------------------------------------------------------------------
*/

// Global default params, used in configs
params {

	//input reads
	sequences = "${baseDir}/sequences"

	//unzipped fastq
	fastq_seq = "${baseDir}/sequences/fastq"

	//path to bed file
	bed_file = "${baseDir}/assets/RADICAL_hg38_sortd.bed"

	//reference genome path
	genome = "${baseDir}/assets/resources_broad_hg38_v0_Homo_sapiens_assembly38.fasta"

	//gtf file path
	gtf = "${baseDir}/assets/Homo_sapiens.GRCh38.105.gtf"

	//gtf file with chr added to names
	gtf_2 = "${baseDir}/assets/Homo_sapiens.GRCh38.104.chrname.gtf"

	//path to cdna paf for genion
	cdna = "${baseDir}/assets/cdna.selfalign.paf"    

	//path to genomic superdups for genion
	superdups = "${baseDir}/assets/genomicSuperDups.txt"

	//path to ctat genome_lib_dir
	genome_lib = "${baseDir}/assets/ctat-lr/GRCh38_gencode_v22_CTAT_lib_Mar012021.plug-n-play/ctat_genome_lib_build_dir"


// TODO nf-core: Specify your pipeline's command line flags
	// Input options
	//input                      = null

	// Boilerplate options
	outdir                       = null
	publish_dir_mode             = 'copy'
	monochrome_logs              = false
	version                      = false
	pipelines_testdata_base_path = 'https://raw.githubusercontent.com/nf-core/test-datasets/'
	trace_report_suffix          = new java.util.Date().format( 'yyyy-MM-dd_HH-mm-ss')// Config options
	config_profile_name        = null
	config_profile_description = null

	//custom_config_version      = 'master'
	//custom_config_base         = "https://raw.githubusercontent.com/nf-core/configs/${params.custom_config_version}"
	config_profile_contact     = null
	config_profile_url         = null
}

process {
	withName:JAFFAL {
		container = 'docker.io/davidsongroup/jaffa:2.4-devel'
		docker.runOptions = '-v ${baseDir}/assets/ref:/ref -v ${$baseDir}/sequences:/input -v ${task.workDir}:/output -w /output'
	}
	withName:SAMTOOLS_SORT {
		container = 'quay.io/biocontainers/samtools:1.17--h00cdaf9_0'
	}
	withName:COORD_SORT {
		container = 'quay.io/biocontainers/samtools:1.17--h00cdaf9_0'	
	}
	withName:SEQKIT {
		container = 'docker.io/staphb/seqkit'
	}
	withName:MINIMAP_ALIGN {
		container = 'docker.io/staphb/minimap2:2.30'
	}
	withName:GENION {
		container = 'docker.io/themariya/genion'
	}
	withName:COVERAGE {
		container = 'quay.io/biocontainers/bedtools:2.31.1--h13024bc_3'
	}
	withName:CTAT {
		container = 'docker.io/trinityctat/ctat_lr_fusion:latest'
	}
	withName:LONGGF {
		container = 'docker.io/trinityctat/longgf:latest'
	}
	withName:FUSIONSEEKER {
		container = 'docker.io/maggichen/fusionseeker:latest'
	}
	withName:DORADO_ALIGN {
		container = 'docker.io/nanoporetech/dorado:latest'
	}
	withName:COLLECTOUT {
		container = 'docker.io/jupyter/scipy-notebook:x86_64-ubuntu-22.04'
	}
	withName:REFORMATFUSVIZ {
		container = 'docker.io/jupyter/scipy-notebook:x86_64-ubuntu-22.04'
	}
	withName:HISTOGRAM {
		container = 'docker.io/jupyter/scipy-notebook:x86_64-ubuntu-22.04'
	}
}


// Load base.config by default for all pipelines
includeConfig 'conf/base.config'

profiles {
	debug {
		dumpHashes              = true
		process.beforeScript    = 'echo $HOSTNAME'
		cleanup                 = false
		nextflow.enable.configProcessNamesValidation = true
	}
		conda.enabled = true
		docker.enabled          = false
		singularity.enabled     = false
		podman.enabled          = false
		shifter.enabled         = false
		charliecloud.enabled    = false
		conda.channels          = ['conda-forge', 'bioconda']
		apptainer.enabled       = false
	
	mamba {
		conda.enabled           = true
		conda.useMamba          = true
		docker.enabled          = false
		singularity.enabled     = false
		podman.enabled          = false
		shifter.enabled         = false
		charliecloud.enabled    = false
		apptainer.enabled       = false
	}
	docker {
		docker.enabled          = true
		conda.enabled           = false
		singularity.enabled     = false
		podman.enabled          = false
		shifter.enabled         = false
		charliecloud.enabled    = false
		apptainer.enabled       = false
		docker.runOptions       = '-u $(id -u):$(id -g)'
	}
	arm {
		docker.runOptions       = '-u $(id -u):$(id -g) --platform=linux/amd64'
	}
	singularity {
		singularity.enabled     = true
		singularity.autoMounts  = true
		conda.enabled           = false
		docker.enabled          = false
		podman.enabled          = false
		shifter.enabled         = false
		charliecloud.enabled    = false
		apptainer.enabled       = false
	}
	podman {
		podman.enabled          = true
		conda.enabled           = false
		docker.enabled          = false
		singularity.enabled     = false
		shifter.enabled         = false
		charliecloud.enabled    = false
		apptainer.enabled       = false
	}
	shifter {
		shifter.enabled         = true
		conda.enabled           = false
		docker.enabled          = false
		singularity.enabled     = false
		podman.enabled          = false
		charliecloud.enabled    = false
		apptainer.enabled       = false
	}
	charliecloud {
		charliecloud.enabled    = true
		conda.enabled           = false
		docker.enabled          = false
		singularity.enabled     = false
		podman.enabled          = false
		shifter.enabled         = false
		apptainer.enabled       = false
	}
	apptainer {
		apptainer.enabled       = true
		apptainer.autoMounts    = true
		conda.enabled           = false
		docker.enabled          = false
		singularity.enabled     = false
		podman.enabled          = false
		shifter.enabled         = false
		charliecloud.enabled    = false
	}
	wave {
		apptainer.ociAutoPull   = true
		singularity.ociAutoPull = true
		wave.enabled            = true
		wave.freeze             = true
		wave.strategy           = 'conda,container'
	}
	test      { includeConfig 'conf/test.config'      }
	//test_full { includeConfig 'conf/test_full.config' }
}

// Load nf-core custom profiles from different Institutions
//includeConfig !System.getenv('NXF_OFFLINE') && params.custom_config_base ? "${params.custom_config_base}/nfcore_custom.config" : "/dev/null"

// Load actrec/nanopore_fusion custom profiles from different institutions.
// TODO nf-core: Optionally, you can add a pipeline-specific nf-core config at https://github.com/nf-core/configs
// includeConfig !System.getenv('NXF_OFFLINE') && params.custom_config_base ? "${params.custom_config_base}/pipeline/nanopore_fusion.config" : "/dev/null"

// Set default registry for Apptainer, Docker, Podman, Charliecloud and Singularity independent of -profile
// Will not be used unless Apptainer / Docker / Podman / Charliecloud / Singularity are enabled
// Set to your registry if you have a mirror of containers
apptainer.registry    = 'quay.io'
docker.registry       = 'quay.io'
podman.registry       = 'quay.io'
singularity.registry  = 'quay.io'
charliecloud.registry = 'quay.io'



// Export these variables to prevent local Python/R libraries from conflicting with those in the container
// The JULIA depot path has been adjusted to a fixed path `/usr/local/share/julia` that needs to be used for packages in the container.
// See https://apeltzer.github.io/post/03-julia-lang-nextflow/ for details on that. Once we have a common agreement on where to keep Julia packages, this is adjustable.

env {
	PYTHONNOUSERSITE = 1
	R_PROFILE_USER   = "/.Rprofile"
	R_ENVIRON_USER   = "/.Renviron"
	JULIA_DEPOT_PATH = "/usr/local/share/julia"
}

// Set bash options
process.shell = [
	"bash",
	"-C",         // No clobber - prevent output redirection from overwriting files.
	"-e",         // Exit if a tool returns a non-zero status/exit code
	"-u",         // Treat unset variables and parameters as an error
	"-o",         // Returns the status of the last command to exit..
	"pipefail"    //   ..with a non-zero status or zero if all successfully execute
]

// Disable process selector warnings by default. Use debug profile to enable warnings.
nextflow.enable.configProcessNamesValidation = false

timeline {
	enabled = true
	file    = "${params.outdir}/pipeline_info/execution_timeline_${params.trace_report_suffix}.html"
}
report {
	enabled = true
	file    = "${params.outdir}/pipeline_info/execution_report_${params.trace_report_suffix}.html"
}
trace {
	enabled = true
	file    = "${params.outdir}/pipeline_info/execution_trace_${params.trace_report_suffix}.txt"
}
dag {
	enabled = true
	file    = "${params.outdir}/pipeline_info/pipeline_dag_${params.trace_report_suffix}.html"
}

manifest {
	name            = 'actrec/nanopore_fusion'
	author          = """Gulnaz """ // The author field is deprecated from Nextflow version 24.10.0, use contributors instead
	//homePage        = 'https://github.com/actrec/nanopore_fusion'
	description     = """rna fusion calling for nanopore reads"""
	mainScript      = 'main.nf'
	defaultBranch   = 'master'
	// nextflowVersion = '!>=24.04.2'
	version         = '1.0.0dev'
	doi             = ''
}



// Load modules.config for DSL2 module specific options
includeConfig 'conf/modules.config'
